#! /usr/bin/env python3

from datetime import datetime

def parse_date(date):
    """
    Converts `ISO 8601`_ dates generated by the MediaWiki API into
    :py:class:`datetime.datetime` objects.

    This will return a time in what the wiki thinks is UTC. Plan
    accordingly for bad server configurations.

    .. _`ISO 8601`: http://en.wikipedia.org/wiki/ISO_8601

    :param date: string ISO 8601 date representation
    :returns: :py:class:`datetime.datetime` object
    """
    # MediaWiki API dates are always of the format
    #   YYYY-MM-DDTHH:MM:SSZ
    # (see $formats in wfTimestamp() in includes/GlobalFunctions.php)

    # strptime is slooow!
    #return datetime.strptime(date, '%Y-%m-%dT%H:%M:%SZ')
    return datetime(int(date[:4]), int(date[5:7]), int(date[8:10]),
            int(date[11:13]), int(date[14:16]), int(date[17:19]))

# flatten _shallow_ list
def flatten_list(iterable):
    return [inner for outer in iterable for inner in outer]

# flatten _shallow_ generator
def flatten_gen(iterable):
    return (inner for outer in iterable for inner in outer)

# test if given string is ASCII
def is_ascii(text):
    try:
        text.encode("ascii")
        return True
    except:
        return False

# split ``list_`` into chunks of fixed length ``bs``
def list_chunks(list_, bs):
    return (list_[i:i+bs] for i in range(0, len(list_), bs))
